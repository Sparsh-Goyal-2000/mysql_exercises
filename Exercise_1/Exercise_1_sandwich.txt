mysql> -- Creating Table Tastes
mysql> 
mysql> Create Table Tastes(
    -> Name Varchar(10) NOT NULL,
    -> Filling Varchar(10) NOT NULL,
    -> PRIMARY KEY(Name, Filling)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> 
mysql> -- Inserting Data Into Table Tastes
mysql> 
mysql> Insert Into Tastes Values
    -> ('Brown', 'Turkey'),
    -> ('Brown', 'Beef'),
    -> ('Brown', 'Ham'),
    -> ('Green', 'Beef'),
    -> ('Jones', 'Cheese'),
    -> ('Green', 'Turkey'),
    -> ('Green', 'Cheese');
Query OK, 7 rows affected (0.00 sec)
Records: 7  Duplicates: 0  Warnings: 0

mysql> 
mysql> -- Creating Table Locations
mysql> 
mysql> Create Table Locations(
    -> Lname Varchar(10) NOT NULL,
    -> Phone Int(10) NOT NULL,
    -> Address Varchar(15),
    -> PRIMARY KEY(Lname)
    -> );
Query OK, 0 rows affected, 1 warning (0.02 sec)

mysql> 
mysql> -- Inserting Data Into Table Locations
mysql> 
mysql> Insert Into Locations Values
    -> ('Lincoln', 6834523, 'Lincoln Place'),
    -> ('O\'Neill\'s', 6742134, 'Parse St'),
    -> ('Old Nag', 7678132, 'Dame St'),
    -> ('Buttery', 7023421, 'College St');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> 
mysql> -- Creating Table Sandwiches
mysql> 
mysql> Create Table Sandwiches(
    -> Location Varchar(10) NOT NULL,
    -> Bread Varchar(10) NOT NULL,
    -> Filling Varchar(10) NOT NULL,
    -> Price Float NOT NULL,
    -> PRIMARY KEY(Location, Bread, Filling),
    -> FOREIGN KEY(Location) REFERENCES Locations(Lname)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> 
mysql> -- Inserting Data Into Table Sandwiches
mysql> 
mysql> Insert Into Sandwiches Values
    -> ('Lincoln', 'Rye', 'Ham', 1.25),
    -> ('O\'Neill\'s', 'White', 'Cheese', 1.20),
    -> ('O\'Neill\'s', 'White', 'Ham', 1.25),
    -> ('Old Nag', 'Rye', 'Beef', 1.35),
    -> ('Buttery', 'White', 'Cheese', 1.00),
    -> ('O\'Neill\'s', 'White', 'Turkey', 1.35),
    -> ('Buttery', 'White', 'Ham', 1.10),
    -> ('Lincoln', 'Rye', 'Beef', 1.35),
    -> ('Lincoln', 'White', 'Ham', 1.30),
    -> ('Old Nag', 'Rye', 'Ham', 1.40);
Query OK, 10 rows affected (0.01 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> 
mysql> -- Selecting All Data From ALl Tables
mysql> 
mysql> Select * From Tastes;
+-------+---------+
| Name  | Filling |
+-------+---------+
| Brown | Beef    |
| Brown | Ham     |
| Brown | Turkey  |
| Green | Beef    |
| Green | Cheese  |
| Green | Turkey  |
| Jones | Cheese  |
+-------+---------+
7 rows in set (0.01 sec)

mysql> Select * From Locations;
+-----------+---------+---------------+
| Lname     | Phone   | Address       |
+-----------+---------+---------------+
| Buttery   | 7023421 | College St    |
| Lincoln   | 6834523 | Lincoln Place |
| O'Neill's | 6742134 | Parse St      |
| Old Nag   | 7678132 | Dame St       |
+-----------+---------+---------------+
4 rows in set (0.00 sec)

mysql> Select * From Sandwiches;
+-----------+-------+---------+-------+
| Location  | Bread | Filling | Price |
+-----------+-------+---------+-------+
| Buttery   | White | Cheese  |     1 |
| Buttery   | White | Ham     |   1.1 |
| Lincoln   | Rye   | Beef    |  1.35 |
| Lincoln   | Rye   | Ham     |  1.25 |
| Lincoln   | White | Ham     |   1.3 |
| O'Neill's | White | Cheese  |   1.2 |
| O'Neill's | White | Ham     |  1.25 |
| O'Neill's | White | Turkey  |  1.35 |
| Old Nag   | Rye   | Beef    |  1.35 |
| Old Nag   | Rye   | Ham     |   1.4 |
+-----------+-------+---------+-------+
10 rows in set (0.00 sec)

mysql> 
mysql> -- i) Places where Jones can eat using a nested subquery
mysql> 
mysql> Select Location From Sandwiches 
    -> Where Filling In (
    -> Select Filling From Tastes 
    -> Where Name = 'Jones'
    -> );
+-----------+
| Location  |
+-----------+
| Buttery   |
| O'Neill's |
+-----------+
2 rows in set (0.00 sec)

mysql> 
mysql> -- ii) Places where Jones can eat without using a nested subquery
mysql>     
mysql> Select Location From Sandwiches
    -> Join Tastes On Sandwiches.Filling = Tastes.Filling 
    -> Where Tastes.Name = 'Jones';
+-----------+
| Location  |
+-----------+
| Buttery   |
| O'Neill's |
+-----------+
2 rows in set (0.00 sec)

mysql> 
mysql> -- iii) For each location, the number of people who can eat there
mysql> 
mysql> Select Sandwiches.Location, Count(DISTINCT Tastes.Name) 
    -> From Sandwiches 
    -> Join Tastes Using(Filling) 
    -> Group By Sandwiches.Location;
+-----------+-----------------------------+
| Location  | Count(DISTINCT Tastes.Name) |
+-----------+-----------------------------+
| Buttery   |                           3 |
| Lincoln   |                           2 |
| O'Neill's |                           3 |
| Old Nag   |                           2 |
+-----------+-----------------------------+
4 rows in set (0.01 sec)

