mysql> -- Creating Database Employee
mysql> 
mysql> Create Database Employee;
Query OK, 1 row affected (0.01 sec)

mysql> 
mysql> -- Using Database Employee
mysql> 
mysql> Use Employee;
Database changed
mysql> 
mysql> -- Creating Table Department
mysql> 
mysql> Create Table Departments(
    -> id int PRIMARY KEY AUTO_INCREMENT,
    -> name Varchar(15) NOT NULL UNIQUE
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> 
mysql> -- Inserting Into Table Department
mysql> 
mysql> Insert Into Departments (name) values
    -> ('Banking'),
    -> ('Insurance'),
    -> ('Services');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> 
mysql> -- Creating Table Employee
mysql> 
mysql> Create Table Employees(
    -> id int PRIMARY KEY AUTO_INCREMENT,
    -> name Varchar(25) NOT NULL,
    -> salary mediumint unsigned NOT NULL,
    -> department_id int NOT NULL,
    -> FOREIGN KEY (department_id) REFERENCES Departments(id)
    -> );
Query OK, 0 rows affected (0.05 sec)

mysql> 
mysql> -- Inserting Into Table Employee
mysql> 
mysql> Insert Into Employees (name, salary, department_id) Values
    -> ('Chris Gayle', 1000000, 1),
    -> ('Michael Clarke', 800000, 2),
    -> ('Rahul Dravid', 700000, 1),
    -> ('Ricky Pointing', 600000, 2),
    -> ('Albie Morkel', 650000, 2),
    -> ('Wasim Akram', 750000, 3);
Query OK, 6 rows affected (0.00 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> 
mysql> -- Creating Table Commissions
mysql> 
mysql> Create Table Commissions(
    -> id int PRIMARY KEY AUTO_INCREMENT,
    -> employee_id int NOT NULL,
    -> commission_amount mediumint unsigned NOT NULL,
    -> FOREIGN KEY (employee_id) REFERENCES Employees(id)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> 
mysql> -- Inserting Into Table Commissions
mysql> 
mysql> Insert into Commissions (employee_id, commission_amount) values
    -> (1,5000),
    -> (2,3000),
    -> (3,4000),
    -> (1,4000),
    -> (2,3000),
    -> (4,2000),
    -> (5,1000),
    -> (6,5000);
Query OK, 8 rows affected (0.01 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> 
mysql> -- Showing Data In All Tables
mysql> 
mysql> Select * from Departments;
+----+-----------+
| id | name      |
+----+-----------+
|  1 | Banking   |
|  2 | Insurance |
|  3 | Services  |
+----+-----------+
3 rows in set (0.00 sec)

mysql> Select * from Employees;
+----+----------------+---------+---------------+
| id | name           | salary  | department_id |
+----+----------------+---------+---------------+
|  1 | Chris Gayle    | 1000000 |             1 |
|  2 | Michael Clarke |  800000 |             2 |
|  3 | Rahul Dravid   |  700000 |             1 |
|  4 | Ricky Pointing |  600000 |             2 |
|  5 | Albie Morkel   |  650000 |             2 |
|  6 | Wasim Akram    |  750000 |             3 |
+----+----------------+---------+---------------+
6 rows in set (0.00 sec)

mysql> Select * from Commissions;
+----+-------------+-------------------+
| id | employee_id | commission_amount |
+----+-------------+-------------------+
|  1 |           1 |              5000 |
|  2 |           2 |              3000 |
|  3 |           3 |              4000 |
|  4 |           1 |              4000 |
|  5 |           2 |              3000 |
|  6 |           4 |              2000 |
|  7 |           5 |              1000 |
|  8 |           6 |              5000 |
+----+-------------+-------------------+
8 rows in set (0.00 sec)

mysql> 
mysql> -- i) Find the employee who gets the highest total commission.
mysql> 
mysql> Select Name, sum(commission_amount) as Commission 
    -> From Employees 
    -> join Commissions on Employees.id = Commissions.employee_id 
    -> group by employee_id 
    -> order by Commission desc limit 1;
+-------------+------------+
| Name        | Commission |
+-------------+------------+
| Chris Gayle |       9000 |
+-------------+------------+
1 row in set (0.00 sec)

mysql> 
mysql> -- ii) Find employee with 4th Highest salary from employee table.
mysql> 
mysql> Select Name from Employees 
    -> where salary = (
    -> Select Distinct Salary From Employees 
    -> Order by Salary desc limit 3,1
    -> );
+--------------+
| Name         |
+--------------+
| Rahul Dravid |
+--------------+
1 row in set (0.00 sec)

mysql> 
mysql> -- iii) Find department that is giving highest commission.
mysql> 
mysql> Select Departments.name, sum(commission_amount) as Commission 
    -> From Departments
    -> join Employees on Departments.id = Employees.department_id 
    -> join Commissions on Employees.id = Commissions.employee_id 
    -> group by Departments.name 
    -> order by Commission desc limit 1;
+---------+------------+
| name    | Commission |
+---------+------------+
| Banking |      13000 |
+---------+------------+
1 row in set (0.01 sec)

mysql> 
mysql> -- iv) Find employees getting commission more than 3000
mysql> -- Display Output in following pattern:  Chris Gayle, Rahul Dravid  4000
mysql> 
mysql> Select group_concat(name) as Names, Commission_amount 
    -> From Commissions 
    -> join Employees on Employees.id = Commissions.employee_id 
    -> group by Commission_amount having Commission_amount > 3000;
+--------------------------+-------------------+
| Names                    | Commission_amount |
+--------------------------+-------------------+
| Chris Gayle,Rahul Dravid |              4000 |
| Chris Gayle,Wasim Akram  |              5000 |
+--------------------------+-------------------+
2 rows in set (0.00 sec)

